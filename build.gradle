plugins {
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'signing'
    id 'com.gradle.plugin-publish' version '1.3.1'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
    withSourcesJar()
    withJavadocJar()
}

// Add duplicate handling strategy for processResources task
processResources {
    duplicatesStrategy = DuplicatesStrategy.WARN
}

dependencies {
    implementation gradleApi()

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.1'
    testImplementation 'org.mockito:mockito-core:5.8.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.8.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
}

gradlePlugin {
    website = 'https://github.com/mikeleitz/quarkus-build-helper-plugin'
    vcsUrl = 'https://github.com/mikeleitz/quarkus-build-helper-plugin.git'

    plugins {
        quarkusBuildHelper {
            id = 'com.mleitz1.quarkus.quarkus-build-helper'
            implementationClass = 'com.mleitz1.quarkus.gradle.QuarkusBuildHelperPlugin'
            displayName = 'Quarkus Build Helper Plugin'
            description = 'A Gradle plugin for diagnosing and troubleshooting Quarkus builds'
            tags = ['quarkus', 'native', 'diagnostics', 'build']
        }
    }
}

test {
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            name = "artifactory"
            url = "https://jfrog.mleitz1.com/artifactory/gradle-plugins-local/"
            credentials {
                username = project.findProperty("artifactory_user") ?: System.getenv("ARTIFACTORY_USERNAME")
                password = project.findProperty("artifactory_password") ?: System.getenv("ARTIFACTORY_PASSWORD")
            }
        }
    }
}

signing {
    required = project.hasProperty('signing.keyId')
    sign publishing.publications
}
